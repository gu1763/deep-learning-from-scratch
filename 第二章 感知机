第二章 感知机

#感知机是什么
感知机：接收多个信号，输出一个信号。信号只有流（1）不流（0）两种取值。

图中是一个接受两个输入信号的感知机的例子。x1x2是输入信号，y是输出信号，w1w2是权重。图中圆圈表示“神经元”或“节点”。输入信号被送往神经元时会分别乘以固定权重，神经元会计算传送过来的信号之和，超过某个界限值（阈值θ）时才会输出1，即“神经元被激活”。
权重：发挥着控制各个信号的重要性的作用。权重越大，对应该权重的信号的重要性就越高。（类比电路中的电阻）

#简单逻辑电路
#与门（AND gate）
当w1<=θ,w2<=θ,且w1+w2>θ时，满足与门的条件。

#与非门（NAND gate）
与非门与与门相反，只需将与门中权重与阈值取相反数，即可实现与非门。

#或门（OR gate）
只需取w1>θ,w2>θ，且θ>0。

·与门、与非门、或门电路参数不同，但构造一致。也就是说，构造相同的感知机某只需适当调整参数即可变化为这三种门。

#感知机的实现
简单实现：用python实现逻辑电路。
导入权重和偏置：偏置b=-θ，w1w2称为权重。（可以借助数组进行计算）

#感知机的局限性
#异或门（XOR gate）
无法用前面介绍的感知机实现。因为用一条直线无法分割图中圆点和三角点。
线性和非线性：由直线分割而成的空间叫做线性空间，曲线分割而成的叫做非线性空间。

#多层感知机
感知机可以通过“叠加层”来表示异或门。
尝试得到左边第一个放与非门，第二个放或门，右边放与门，即可实现异或门。
补充：各种门间的运算规则，如何根据真值表构建门电路。
多层感知机：叠加了多层的感知机。
图中感知机有三层构成，分别为第0、1、2层，所以称为“2层感知机”。但也有说法根据其共有三层，称其为“3层感知机”。
·通过叠加层（加深层），感知机能进行更灵活的表示。

#从与非门到计算机
实际上只需要通过与非门的组合，就能再现计算机进行的处理。也就是说，通过组合感知机也可以表示计算机。（先实现与门或门，然后实现半加器全加器，接着实现ALU，然后实现CPU。）
二层感知机（严格地说是激活函数使用了非线性的sigmoid函数的感知机），可以表示任意函数。

